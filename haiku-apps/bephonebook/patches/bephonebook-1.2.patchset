From 8afff35016e939324f9e952fd94b79e2ff465682 Mon Sep 17 00:00:00 2001
From: Bach Nguyen <bach5000@gmail.com>
Date: Fri, 9 Nov 2018 19:53:09 +0000
Subject: Fix build

diff --git a/Source/CLVColumn.h b/Source/CLVColumn.h
index f13f506..7a4e0c2 100644
--- a/Source/CLVColumn.h
+++ b/Source/CLVColumn.h
@@ -23,7 +23,7 @@
 //******************************************************************************************************
 #include <SupportDefs.h>
 #include <Rect.h>
-
+#include <InterfaceKit.h>
 
 //******************************************************************************************************
 //**** PROJECT HEADER FILES AND CLASS NAME DECLARATIONS
diff --git a/Source/CLVEasyItem.cpp b/Source/CLVEasyItem.cpp
index 5db43d3..89ab200 100644
--- a/Source/CLVEasyItem.cpp
+++ b/Source/CLVEasyItem.cpp
@@ -19,7 +19,7 @@
 //******************************************************************************************************
 #include <string.h>
 #include <Region.h>
-
+#include <AppKit.h>
 
 //******************************************************************************************************
 //**** PROJECT HEADER FILES
diff --git a/Source/bephone.h b/Source/bephone.h
index 320201c..2f27322 100644
--- a/Source/bephone.h
+++ b/Source/bephone.h
@@ -9,7 +9,7 @@
 #include "windows.h"
 #include <NodeInfo.h>
 #include <Screen.h>
-#include <iostream.h>
+#include <iostream>
 #include <Roster.h>
 
 class BephoneApp : public BApplication
@@ -28,4 +28,4 @@ extern BString SkinPath,LastFileLoaded;
 extern bool Saved;
 extern rgb_color color;
 extern char COM[255];
-#endif
\ No newline at end of file
+#endif
diff --git a/Source/windows.cpp b/Source/windows.cpp
index 3bbd8c6..826737b 100644
--- a/Source/windows.cpp
+++ b/Source/windows.cpp
@@ -4,7 +4,7 @@
 #include "windows.h"
 #include "bephone.h"
 #include "Dial.h"
-
+#include <iostream>
 #include "be/kernel/OS.h"
 
 MainWindow::MainWindow(BRect rect):BWindow(rect,"BePhoneBook",B_TITLED_WINDOW,B_NOT_ZOOMABLE | B_NOT_RESIZABLE)
@@ -281,7 +281,7 @@ void MainWindow::MessageReceived(BMessage* msg)
 				msg->FindString("Note",i,(const char**)&Note);
 				msg->FindString("Location",i,(const char**)&Location);
 				
-				cout<<Name<<Tel<<Note<<Location<<"\n";
+				std::cout<<Name<<Tel<<Note<<Location<<"\n";
 				
 				Temp->Name=new char[(strlen(Name)+1)];
 				strcpy(Temp->Name,Name);
-- 
2.19.0

From 74cd9c7d10c44bfd539b90403e2c3d744e49a2dc Mon Sep 17 00:00:00 2001
From: Bach Nguyen <bach5000@gmail.com>
Date: Fri, 9 Nov 2018 20:09:20 +0000
Subject: Makefile

diff --git a/Makefile b/Makefile
new file mode 100644
index 0000000..aeae240
--- /dev/null
+++ b/Makefile
@@ -0,0 +1,123 @@
+## Haiku Generic Makefile v2.6 ##
+
+## Fill in this file to specify the project being created, and the referenced
+## Makefile-Engine will do all of the hard work for you. This handles any
+## architecture of Haiku.
+
+# The name of the binary.
+NAME = BePhoneBook
+
+# The type of binary, must be one of:
+#	APP:	Application
+#	SHARED:	Shared library or add-on
+#	STATIC:	Static library archive
+#	DRIVER: Kernel driver
+TYPE = APP
+
+# 	If you plan to use localization, specify the application's MIME signature.
+APP_MIME_SIG = 
+
+#	The following lines tell Pe and Eddie where the SRCS, RDEFS, and RSRCS are
+#	so that Pe and Eddie can fill them in for you.
+#%{
+# @src->@ 
+
+#	Specify the source files to use. Full paths or paths relative to the 
+#	Makefile can be included. All files, regardless of directory, will have
+#	their object files created in the common object directory. Note that this
+#	means this Makefile will not work correctly if two source files with the
+#	same name (source.c or source.cpp) are included from different directories.
+#	Also note that spaces in folder names do not work well with this Makefile.
+SRCS =  Source/windows.cpp Source/views.cpp Source/unarchive.cpp Source/dos_beos.cpp Source/data.cpp Source/confloadsave.cpp Source/bephone.cpp Source/ScrollViewCorner.cpp Source/PrefilledBitmap.cpp Source/NewStrings.cpp Source/MouseWatcher.cpp Source/MouseDragOrPopupWatcher.cpp Source/IconListItem.cpp Source/Dial.cpp Source/ColumnListView.cpp Source/CLVListItem.cpp Source/CLVEasyItem.cpp Source/CLVColumnLabelView.cpp Source/CLVColumn.cpp Source/BetterScrollView.cpp
+
+#	Specify the resource definition files to use. Full or relative paths can be
+#	used.
+RDEFS = 
+
+#	Specify the resource files to use. Full or relative paths can be used.
+#	Both RDEFS and RSRCS can be utilized in the same Makefile.
+RSRCS =  Source/Bephonebook.rsrc
+
+# End Pe/Eddie support.
+# @<-src@ 
+#%}
+
+#	Specify libraries to link against.
+#	There are two acceptable forms of library specifications:
+#	-	if your library follows the naming pattern of libXXX.so or libXXX.a,
+#		you can simply specify XXX for the library. (e.g. the entry for
+#		"libtracker.so" would be "tracker")
+#
+#	-	for GCC-independent linking of standard C++ libraries, you can use
+#		$(STDCPPLIBS) instead of the raw "stdc++[.r4] [supc++]" library names.
+#
+#	- 	if your library does not follow the standard library naming scheme,
+#		you need to specify the path to the library and it's name.
+#		(e.g. for mylib.a, specify "mylib.a" or "path/mylib.a")
+LIBS =  $(STDCPPLIBS) be tracker bsd translation device media
+
+#	Specify additional paths to directories following the standard libXXX.so
+#	or libXXX.a naming scheme. You can specify full paths or paths relative
+#	to the Makefile. The paths included are not parsed recursively, so
+#	include all of the paths where libraries must be found. Directories where
+#	source files were specified are	automatically included.
+LIBPATHS = 
+
+#	Additional paths to look for system headers. These use the form
+#	"#include <header>". Directories that contain the files in SRCS are
+#	NOT auto-included here.
+SYSTEM_INCLUDE_PATHS =  
+
+#	Additional paths paths to look for local headers. These use the form
+#	#include "header". Directories that contain the files in SRCS are
+#	automatically included.
+LOCAL_INCLUDE_PATHS =  . Source
+
+#	Specify the level of optimization that you want. Specify either NONE (O0),
+#	SOME (O1), FULL (O2), or leave blank (for the default optimization level).
+OPTIMIZE := NONE
+
+# 	Specify the codes for languages you are going to support in this
+# 	application. The default "en" one must be provided too. "make catkeys"
+# 	will recreate only the "locales/en.catkeys" file. Use it as a template
+# 	for creating catkeys for other languages. All localization files must be
+# 	placed in the "locales" subdirectory.
+LOCALES = 
+
+#	Specify all the preprocessor symbols to be defined. The symbols will not
+#	have their values set automatically; you must supply the value (if any) to
+#	use. For example, setting DEFINES to "DEBUG=1" will cause the compiler
+#	option "-DDEBUG=1" to be used. Setting DEFINES to "DEBUG" would pass
+#	"-DDEBUG" on the compiler's command line.
+DEFINES = 
+
+#	Specify the warning level. Either NONE (suppress all warnings),
+#	ALL (enable all warnings), or leave blank (enable default warnings).
+WARNINGS = 
+
+#	With image symbols, stack crawls in the debugger are meaningful.
+#	If set to "TRUE", symbols will be created.
+SYMBOLS := 
+
+#	Includes debug information, which allows the binary to be debugged easily.
+#	If set to "TRUE", debug info will be created.
+DEBUGGER := 
+
+#	Specify any additional compiler flags to be used.
+COMPILER_FLAGS = -fpermissive
+
+#	Specify any additional linker flags to be used.
+LINKER_FLAGS = 
+
+#	(Only used when "TYPE" is "DRIVER"). Specify the desired driver install
+#	location in the /dev hierarchy. Example:
+#		DRIVER_PATH = video/usb
+#	will instruct the "driverinstall" rule to place a symlink to your driver's
+#	binary in ~/add-ons/kernel/drivers/dev/video/usb, so that your driver will
+#	appear at /dev/video/usb when loaded. The default is "misc".
+DRIVER_PATH = 
+
+## Include the Makefile-Engine
+DEVEL_DIRECTORY := \
+	$(shell findpaths -r "makefile_engine" B_FIND_PATH_DEVELOP_DIRECTORY)
+include $(DEVEL_DIRECTORY)/etc/makefile-engine
-- 
2.19.0
