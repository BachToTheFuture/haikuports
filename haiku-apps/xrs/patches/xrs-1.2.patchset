From 2d81b56f08d084b8210311d6db9e779ed66dda6d Mon Sep 17 00:00:00 2001
From: Bach Nguyen <bach5000@gmail.com>
Date: Sat, 10 Nov 2018 13:30:18 +0000
Subject: Fix build

diff --git a/XrsPalm/src/IO/Configurator.cpp b/XrsPalm/src/IO/Configurator.cpp
index 46979b0..de11e49 100644
--- a/XrsPalm/src/IO/Configurator.cpp
+++ b/XrsPalm/src/IO/Configurator.cpp
@@ -12,15 +12,15 @@ cf_Init(const char *filename)
 	// e ne prepara uno nuovo dove tutti possino scrivere i prori cazzi.
 
 
-	find_directory (B_SYSTEM_SETTINGS_DIRECTORY, &cf_path, true);
-	cf_path.Append (filename);
+	find_directory(B_SYSTEM_SETTINGS_DIRECTORY, &cf_path, true);
+	cf_path.Append(filename);
 
 	status_t err;
 
 	cf_in_msg=new BMessage();
 	cf_out_msg=new BMessage();
 
-	cf_file =new BFile (cf_path.Path (), B_READ_WRITE | B_CREATE_FILE);
+	cf_file =new BFile(cf_path.Path(), B_READ_WRITE | B_CREATE_FILE);
 	if (cf_file->InitCheck () == B_OK)
 	{
 
diff --git a/XrsPalm/src/MainManager/Juice.cpp b/XrsPalm/src/MainManager/Juice.cpp
index 18c72d1..f58f142 100644
--- a/XrsPalm/src/MainManager/Juice.cpp
+++ b/XrsPalm/src/MainManager/Juice.cpp
@@ -85,26 +85,26 @@ Juice::Juice(MatrixWindow *matrix) :
 	optr[0]=(float*)&outputsl;
 	optr[1]=(float*)&outputsr;
 
-	stream_normal_left=new float[ FRAMES_NUM];
-	stream_normal_right=new float[ FRAMES_NUM];
+	stream_normal_left=new float[FRAMES_NUM];
+	stream_normal_right=new float[FRAMES_NUM];
 
 	stream_normal[0]=stream_normal_left;
 	stream_normal[1]=stream_normal_right;
 
-	stream_fx1_left=new float[ FRAMES_NUM];
-	stream_fx1_right=new float[ FRAMES_NUM];
+	stream_fx1_left=new float[FRAMES_NUM];
+	stream_fx1_right=new float[FRAMES_NUM];
 
 	stream_fx1[0]=stream_fx1_left;
 	stream_fx1[1]=stream_fx1_right;
 
-	stream_fx2_left=new float[ FRAMES_NUM];
-	stream_fx2_right=new float[ FRAMES_NUM];
+	stream_fx2_left=new float[FRAMES_NUM];
+	stream_fx2_right=new float[FRAMES_NUM];
 
 	stream_fx2[0]=stream_fx2_left;
 	stream_fx2[1]=stream_fx2_right;
 
-	stream_service_left=new float[ FRAMES_NUM];
-	stream_service_right=new float[ FRAMES_NUM];
+	stream_service_left=new float[FRAMES_NUM];
+	stream_service_right=new float[FRAMES_NUM];
 
 	stream_service[0]=stream_service_left;
 	stream_service[1]=stream_service_right;
diff --git a/XrsPalm/src/MainManager/TheApp.cpp b/XrsPalm/src/MainManager/TheApp.cpp
index a0c869b..8bb6aa4 100644
--- a/XrsPalm/src/MainManager/TheApp.cpp
+++ b/XrsPalm/src/MainManager/TheApp.cpp
@@ -77,7 +77,7 @@ TheApp::TheApp(const char * signature) :
 		}
 	
 	ab->setText("..ready..");
-	 S->Reset(currentSong);
+	 S->Reset(currentSong, true);
 	look=S->PreferredHandler() ;//getHandler();
 	S->Show();
 	
@@ -99,7 +99,7 @@ TheApp::EmptySong()
 	 jfm->CloseSong(currentSong,true);
 	currentSong=jfm->EmptySong();
 	//currentSong->setDefaultBKM();
-	S->Reset(currentSong);
+	S->Reset(currentSong, true);
 	}
 }
 void
@@ -131,7 +131,7 @@ TheApp::DefaultSong()
 		
 	if(currentSong==NULL)	  currentSong=jfm->EmptySong();
 	
-	 S->Reset(currentSong);
+	 S->Reset(currentSong, true);
 	
 	}
 }
@@ -391,7 +391,7 @@ TheApp::RefsReceived(BMessage *message)
 			{
 				if(currentSong->getSizeDescription()>0 && currentSong->popupdesc==true)
 				(new BAlert("XRS ",currentSong->getDescription(), "Ok",NULL,NULL,B_WIDTH_AS_USUAL,B_EMPTY_ALERT))->Go(NULL);
-				S->Reset(currentSong);
+				S->Reset(currentSong, true);
 			}
 			
 		}
@@ -420,4 +420,4 @@ TheApp::AboutRequested()
 	ab->Show();
 		
 	printf("Written by Anzani Andrea\nSend comments to : oxygenum@tiscali.it\nFreeware\n");
-}
\ No newline at end of file
+}
diff --git a/XrsPalm/src/MainManager/TrackManager.h b/XrsPalm/src/MainManager/TrackManager.h
index 9343ae8..088dc0c 100644
--- a/XrsPalm/src/MainManager/TrackManager.h
+++ b/XrsPalm/src/MainManager/TrackManager.h
@@ -28,7 +28,7 @@ public:
 	JTrack*	getJTrack();
 	void		Save(Track*,int,BFile*,int);
 	bool		Load(Track*,int,BFile*,int32,int32);
-	Track*		SendRef(entry_ref,int,BMessage *m=NULL);	
+	Track*		SendRef(entry_ref,int,BMessage *m);	
 	bool		isBoosterValid(int);
 	status_t	SelectTrack(JTrack* t);
 	JTrack*	getCurrentJTrack(){ return curJTrack; };
@@ -70,4 +70,4 @@ public:
 
 
 
-#endif
\ No newline at end of file
+#endif
diff --git a/XrsPalm/src/Makefile b/XrsPalm/src/Makefile
index 5a5b1ef..8820b97 100644
--- a/XrsPalm/src/Makefile
+++ b/XrsPalm/src/Makefile
@@ -103,7 +103,7 @@ RSRCS =
 #	- 	if your library does not follow the standard library naming scheme,
 #		you need to specify the path to the library and it's name.
 #		(e.g. for mylib.a, specify "mylib.a" or "path/mylib.a")
-LIBS = be tracker media game translation
+LIBS = $(STDCPPLIBS) be tracker media game translation
 
 #	Specify additional paths to directories following the standard libXXX.so
 #	or libXXX.a naming scheme. You can specify full paths or paths relative
diff --git a/XrsPalm/src/MediaBrowser/src/MBWindow.cpp b/XrsPalm/src/MediaBrowser/src/MBWindow.cpp
index 920cc47..810884c 100644
--- a/XrsPalm/src/MediaBrowser/src/MBWindow.cpp
+++ b/XrsPalm/src/MediaBrowser/src/MBWindow.cpp
@@ -54,7 +54,7 @@ void
 MBWindow::AddFolder(entry_ref ref)
 {
 	BListItem* samples;
-	list->AddItem(samples = new MListItem(&ref,ref.name,true));
+	list->AddItem(samples = new MListItem(&ref,ref.name,true,-1,1));
 	samples->SetExpanded(true);
 	ParseDir(&ref,samples);
 }
@@ -78,12 +78,12 @@ MBWindow::ParseDir(entry_ref *ref,BListItem* folder)
 				e.GetRef(&rif);
 				if(CheckIsBank(&rif)!=B_OK)
 				{
-					list->AddUnder(new MListItem(&rif,rif.name),folder);
+					list->AddUnder(new MListItem(&rif,rif.name,true,-1,1),folder);
 					//j++;
 				}
 				else
 				{
-					list->AddUnder(samples = new MListItem(&rif,rif.name,true),folder);
+					list->AddUnder(samples = new MListItem(&rif,rif.name,true,-1,1),folder);
 					samples->SetExpanded(false);
 					ParseBank(&rif,samples);
 				}
@@ -94,7 +94,7 @@ MBWindow::ParseDir(entry_ref *ref,BListItem* folder)
 		if(e.IsDirectory())
 			{
 				e.GetRef(&rif);
-				list->AddUnder(samples = new MListItem(&rif,rif.name,true),folder);
+				list->AddUnder(samples = new MListItem(&rif,rif.name,true,-1,1),folder);
 				samples->SetExpanded(false);
 				ParseDir(&rif,samples);
 			}
diff --git a/XrsPalm/src/MediaBrowser/src/MListItem.h b/XrsPalm/src/MediaBrowser/src/MListItem.h
index 0230f4c..785ad62 100644
--- a/XrsPalm/src/MediaBrowser/src/MListItem.h
+++ b/XrsPalm/src/MediaBrowser/src/MListItem.h
@@ -4,8 +4,8 @@
 class MListItem: public BStringItem
 {
 	public:
-		MListItem(entry_ref*,const char* name,bool isFolder=false,int32 spiaz=-1,int32 size=-1);
+		MListItem(entry_ref*,const char* name,bool isFolder,int32 spiaz,int32 size);
 		BMessage*	getMessage();
 	private:
 		BMessage	*msg;
-}; 
\ No newline at end of file
+}; 
diff --git a/XrsPalm/src/common/JTrack.h b/XrsPalm/src/common/JTrack.h
index 8dfa534..5d3bae3 100644
--- a/XrsPalm/src/common/JTrack.h
+++ b/XrsPalm/src/common/JTrack.h
@@ -32,7 +32,7 @@ class	BPot;
 class JTrack:public BView
 {
 	public:
-				JTrack(BRect,int16,BView*,uint32 type=7,const char*n="TrackNameOff");
+				JTrack(BRect,int16,BView*,uint32 type,const char*n);
 		virtual void	Init(BView *t,BMessage *m);
 		virtual void	RControl();
 		virtual void	Reset(Pattern*,Track*);
diff --git a/XrsPalm/src/common/PlugWindow.h b/XrsPalm/src/common/PlugWindow.h
index ce31bb5..2769c67 100644
--- a/XrsPalm/src/common/PlugWindow.h
+++ b/XrsPalm/src/common/PlugWindow.h
@@ -15,11 +15,11 @@ class PlugWindow:public BWindow
 
 
 	 public:
-					PlugWindow(const char*name=NULL);
+					PlugWindow(const char*name);
 			virtual bool 	QuitRequested();
 			void		SetControls(BView*,bool);
 			void		SetPrograms(const char *name,BMenu*);
-			void		SetState(bool,float force=-1);
+			void		SetState(bool,float force);
 			bool		GetState() { return big;}
 			
 			void		SavePref(BMessage*);
@@ -34,4 +34,4 @@ class PlugWindow:public BWindow
 			float	bigW,bigH;
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/XrsPalm/src/common/Sequence.h b/XrsPalm/src/common/Sequence.h
index 52dc20d..cb4c58d 100644
--- a/XrsPalm/src/common/Sequence.h
+++ b/XrsPalm/src/common/Sequence.h
@@ -21,7 +21,7 @@ class Sequence
 		
 		int	ItemAt(int);
 		int	Reset();
-			void	setItemAt(int,int,bool f=false);
+			void	setItemAt(int,int,bool f);
 		
 			int	getMaxSeq();
 			int	getMaxPat();
@@ -42,4 +42,4 @@ class Sequence
 		int	MaxSeq,MaxPat;
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/XrsPalm/src/fx/Filter2p.cpp b/XrsPalm/src/fx/Filter2p.cpp
index c85875c..7b29132 100644
--- a/XrsPalm/src/fx/Filter2p.cpp
+++ b/XrsPalm/src/fx/Filter2p.cpp
@@ -1,5 +1,5 @@
 #include "Filter2p.h"
-
+#include <math.h>
 Filter2p::Filter2p()
 {
 	Init();
diff --git a/XrsPalm/src/interface/MainWindow.h b/XrsPalm/src/interface/MainWindow.h
index 466a33c..3002c1a 100644
--- a/XrsPalm/src/interface/MainWindow.h
+++ b/XrsPalm/src/interface/MainWindow.h
@@ -27,7 +27,7 @@ class MainWindow:public BWindow
 				void	Close();
 			
 		virtual	void	MessageReceived(BMessage* message);
-				void	Reset(Song*,bool juicereset=true);
+				void	Reset(Song*,bool juicereset);
 				void	Init(JFileManager*,TrackManager*);
 		virtual bool		QuitRequested();
 		virtual void WindowActivated(bool active);
@@ -73,4 +73,4 @@ class MainWindow:public BWindow
 			
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/XrsPalm/src/interface/Panels.h b/XrsPalm/src/interface/Panels.h
index d91171b..abd0684 100644
--- a/XrsPalm/src/interface/Panels.h
+++ b/XrsPalm/src/interface/Panels.h
@@ -8,6 +8,7 @@ class BRadioButton;
 class Song;
 class BTextView;
 class BCheckBox;
+class BFilePanel;
 
 class ExportPanel: public BWindow
 {
@@ -46,4 +47,4 @@ class SongSettings: public BWindow
 		BTextView* tw;
 		PatControl *mea;
 		PatControl *beat;		
-};
\ No newline at end of file
+};
diff --git a/XrsPalm/src/interface/Views/PatControl.h b/XrsPalm/src/interface/Views/PatControl.h
index 4e0b137..5921aa0 100644
--- a/XrsPalm/src/interface/Views/PatControl.h
+++ b/XrsPalm/src/interface/Views/PatControl.h
@@ -6,7 +6,7 @@
 class PatControl : public BView
 {
 	public:
-		PatControl(BRect,BPicture*,BPicture*,BPicture*,BPicture*,BPicture*,int ,int ,int,int32,BBitmap *base=NULL);
+		PatControl(BRect,BPicture*,BPicture*,BPicture*,BPicture*,BPicture*,int ,int ,int,int32,BBitmap *base);
 	
 	virtual void 		AttachedToWindow();	
 	virtual void 		MessageReceived(BMessage*);
@@ -31,4 +31,4 @@ class PatControl : public BView
 		
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/XrsPalm/src/interface/WU_AppUtils.cp b/XrsPalm/src/interface/WU_AppUtils.cp
index 135f351..7fe27f1 100644
--- a/XrsPalm/src/interface/WU_AppUtils.cp
+++ b/XrsPalm/src/interface/WU_AppUtils.cp
@@ -39,7 +39,7 @@ BroadcastToClients(const char* mimeAppStr, BMessage* theMesg)
 	team_id theTeam;
 	int32 numApps = appList->CountItems();
 	while(numApps > 0) {
-		theTeam = (team_id)appList->ItemAt(numApps - 1);
+		theTeam = (team_id)(*(int*)appList->ItemAt(numApps - 1));
 		status_t result = be_roster->GetRunningAppInfo(theTeam,&theInfo);
 		if(result == B_OK) {
 			// Compare signature and send message if match
diff --git a/XrsPalm/src/interface/playlist/XMatrix.cpp b/XrsPalm/src/interface/playlist/XMatrix.cpp
index bf94698..2720711 100644
--- a/XrsPalm/src/interface/playlist/XMatrix.cpp
+++ b/XrsPalm/src/interface/playlist/XMatrix.cpp
@@ -203,11 +203,11 @@ XMatrix::MouseDown(BPoint p)
 	{
 		if(sequence->ItemAt(ax1)!=ay1)
 		
-				sequence->setItemAt(ax1,ay1);
+				sequence->setItemAt(ax1,ay1,true);
 				
 				else
 				{
-						sequence->setItemAt(ax1,-1);
+						sequence->setItemAt(ax1,-1, true);
 				}
 		
 		
-- 
2.19.0

