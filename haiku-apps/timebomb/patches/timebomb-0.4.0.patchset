From 959d81ff35ee5851b80d7b8a23a2cbf70368addf Mon Sep 17 00:00:00 2001
From: Bach Nguyen <bach5000@gmail.com>
Date: Thu, 22 Nov 2018 11:19:13 +0000
Subject: Fix build x86_64


diff --git a/src/AppWindow.h b/src/AppWindow.h
index 37967d4..d08c6b6 100644
--- a/src/AppWindow.h
+++ b/src/AppWindow.h
@@ -27,8 +27,8 @@ class AppWindow : public BWindow
 
 	public:
 			
-			AppWindow(BRect frame,uint32 workspaces = B_CURRENT_WORKSPACE);			
+			AppWindow(BRect frame,uint32 workspaces);			
 
 };
 
-#endif
\ No newline at end of file
+#endif
diff --git a/src/Makefile b/src/Makefile
new file mode 100644
index 0000000..57639a8
--- /dev/null
+++ b/src/Makefile
@@ -0,0 +1,129 @@
+## Haiku Generic Makefile v2.6 ##
+
+## Fill in this file to specify the project being created, and the referenced
+## Makefile-Engine will do all of the hard work for you. This handles any
+## architecture of Haiku.
+
+# The name of the binary.
+NAME = TimeBomb
+
+# The type of binary, must be one of:
+#	APP:	Application
+#	SHARED:	Shared library or add-on
+#	STATIC:	Static library archive
+#	DRIVER: Kernel driver
+TYPE = APP
+
+# 	If you plan to use localization, specify the application's MIME signature.
+APP_MIME_SIG = "application/x-vnd.Hailstone-TimeBomb"
+
+#	The following lines tell Pe and Eddie where the SRCS, RDEFS, and RSRCS are
+#	so that Pe and Eddie can fill them in for you.
+#%{
+# @src->@ 
+
+#	Specify the source files to use. Full paths or paths relative to the 
+#	Makefile can be included. All files, regardless of directory, will have
+#	their object files created in the common object directory. Note that this
+#	means this Makefile will not work correctly if two source files with the
+#	same name (source.c or source.cpp) are included from different directories.
+#	Also note that spaces in folder names do not work well with this Makefile.
+SRCS =  main.cpp \
+	cd.cpp \
+	SoundWork.cpp \
+	SetWindow.cpp \
+	AppWindow.cpp \
+	AppView.cpp \
+	App.cpp
+
+#	Specify the resource definition files to use. Full or relative paths can be
+#	used.
+RDEFS = TimeBomb.rdef
+
+#	Specify the resource files to use. Full or relative paths can be used.
+#	Both RDEFS and RSRCS can be utilized in the same Makefile.
+RSRCS =
+
+# End Pe/Eddie support.
+# @<-src@ 
+#%}
+
+#	Specify libraries to link against.
+#	There are two acceptable forms of library specifications:
+#	-	if your library follows the naming pattern of libXXX.so or libXXX.a,
+#		you can simply specify XXX for the library. (e.g. the entry for
+#		"libtracker.so" would be "tracker")
+#
+#	-	for GCC-independent linking of standard C++ libraries, you can use
+#		$(STDCPPLIBS) instead of the raw "stdc++[.r4] [supc++]" library names.
+#
+#	- 	if your library does not follow the standard library naming scheme,
+#		you need to specify the path to the library and it's name.
+#		(e.g. for mylib.a, specify "mylib.a" or "path/mylib.a")
+LIBS =  $(STDCPPLIBS) be game media
+
+#	Specify additional paths to directories following the standard libXXX.so
+#	or libXXX.a naming scheme. You can specify full paths or paths relative
+#	to the Makefile. The paths included are not parsed recursively, so
+#	include all of the paths where libraries must be found. Directories where
+#	source files were specified are	automatically included.
+LIBPATHS = 
+
+#	Additional paths to look for system headers. These use the form
+#	"#include <header>". Directories that contain the files in SRCS are
+#	NOT auto-included here.
+SYSTEM_INCLUDE_PATHS =   
+
+#	Additional paths paths to look for local headers. These use the form
+#	#include "header". Directories that contain the files in SRCS are
+#	automatically included.
+LOCAL_INCLUDE_PATHS =
+
+#	Specify the level of optimization that you want. Specify either NONE (O0),
+#	SOME (O1), FULL (O2), or leave blank (for the default optimization level).
+OPTIMIZE :=
+
+# 	Specify the codes for languages you are going to support in this
+# 	application. The default "en" one must be provided too. "make catkeys"
+# 	will recreate only the "locales/en.catkeys" file. Use it as a template
+# 	for creating catkeys for other languages. All localization files must be
+# 	placed in the "locales" subdirectory.
+LOCALES = 
+
+#	Specify all the preprocessor symbols to be defined. The symbols will not
+#	have their values set automatically; you must supply the value (if any) to
+#	use. For example, setting DEFINES to "DEBUG=1" will cause the compiler
+#	option "-DDEBUG=1" to be used. Setting DEFINES to "DEBUG" would pass
+#	"-DDEBUG" on the compiler's command line.
+DEFINES = 
+
+#	Specify the warning level. Either NONE (suppress all warnings),
+#	ALL (enable all warnings), or leave blank (enable default warnings).
+WARNINGS = 
+
+#	With image symbols, stack crawls in the debugger are meaningful.
+#	If set to "TRUE", symbols will be created.
+SYMBOLS := 
+
+#	Includes debug information, which allows the binary to be debugged easily.
+#	If set to "TRUE", debug info will be created.
+DEBUGGER := 
+
+#	Specify any additional compiler flags to be used.
+COMPILER_FLAGS = -fpermissive
+
+#	Specify any additional linker flags to be used.
+LINKER_FLAGS = 
+
+#	(Only used when "TYPE" is "DRIVER"). Specify the desired driver install
+#	location in the /dev hierarchy. Example:
+#		DRIVER_PATH = video/usb
+#	will instruct the "driverinstall" rule to place a symlink to your driver's
+#	binary in ~/add-ons/kernel/drivers/dev/video/usb, so that your driver will
+#	appear at /dev/video/usb when loaded. The default is "misc".
+DRIVER_PATH = 
+
+## Include the Makefile-Engine
+DEVEL_DIRECTORY := \
+	$(shell findpaths -r "makefile_engine" B_FIND_PATH_DEVELOP_DIRECTORY)
+include $(DEVEL_DIRECTORY)/etc/makefile-engine
diff --git a/src/SetWindow.h b/src/SetWindow.h
index 20b2317..1d650c8 100644
--- a/src/SetWindow.h
+++ b/src/SetWindow.h
@@ -8,6 +8,10 @@
 #include <ListView.h>
 
 #include <Window.h>
+#include <StorageKit.h>
+#include <AppKit.h>
+#include <InterfaceKit.h>
+#include <SupportKit.h>
 
 class SetWindow : public BWindow
 {
@@ -43,4 +47,4 @@ class SetWindow : public BWindow
  	
 	
 };
-#endif
\ No newline at end of file
+#endif
diff --git a/src/TimeBomb.rdef b/src/TimeBomb.rdef
new file mode 100644
index 0000000..78efd55
--- /dev/null
+++ b/src/TimeBomb.rdef
@@ -0,0 +1,72 @@
+
+
+resource app_signature "application/x-vnd.Hailstone-TimeBomb";
+
+resource app_version {
+	major  = 0,
+	middle = 4,
+	minor  = 0,
+
+	variety = B_APPV_BETA,
+	internal = 0,
+
+	short_info = "TimeBomb",
+	long_info = "TimeBomb - a desktop alarm clock"
+};
+
+resource app_flags B_SINGLE_LAUNCH;
+
+resource mini_icon array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFA7DFFFFFAFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFAFFFA9DFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF7D9DFF7DFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFF007DFA9DFF"
+	$"FFFFFFFF00000000FFFF007DFFFFFAFF"
+	$"FFFF0E002FEB2F2F0000FFFFFFFFFFFF"
+	$"FFFF002F2B2B002E2F00FFFFFFFFFFFF"
+	$"FF002F2B3F2B002C2D3000FFFFFFFFFF"
+	$"FF002F2B2B2A002C2E2F00FFFFFFFFFF"
+	$"FF00302B2C2B0000EB2F00FFFFFFFFFF"
+	$"FF00302D2C2C2C2C002F000F0F0FFFFF"
+	$"FFFF002F2D2D2E2D2F000F0F0F0F0FFF"
+	$"FFFF0E002F302F2F000F0F0F0F0F0FFF"
+	$"FFFFFFFF000000000F0F0F0F0F0F0FFF"
+	$"FFFFFFFFFFFFFFFFFF0E0F0F0F0FFFFF"
+};
+
+resource large_icon array {
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7DFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF7DFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA7DFFFFFAFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAFFFA9DFF7DFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFAFF7D9DFF7DFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF007DFA9DFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA007DFFFFFAFF7DFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFA007DFFFFFAFFFFFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FFFFFFFFFFFFFAFFFFFF"
+	$"FFFFFFFFFFFFFFFFFFFF0000000000FFFFFFFFFF00FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFFFF000000302F2FEB30000000FF00FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFFFF002FEB2D2D2D2D2DEBEB2F300006FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFFFF00002D2C2B2B2C2DEB2E2D2F2F0000FFFFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF002F2C2C2B2B2B2C2B002D2D2D2F2F3000FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF002B2C2A2B2B2B2B2B002D2D2DEB2F2F00FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF002B2B2B2A2B2B2A2B002C2C2E2D2FEB00FFFFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFF002F2B2A2B2A3F2C2B2B002D2D2C2E2D2F2F00FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFF002F2B2A2B2A3F2B2B2B002B2D2D2E2EEB3000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFF00302B2B002B2A2C2B2B002D2D2D2D2E003000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFF00302B2C2B2A2B2B2B2C0000002E2DEB2F2F00FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFF00302C2B2C2B2B2B2C2B2C2D2C0000002F2F00FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFF00002D2C2B2B2B2C2C2C2C2D2D2DEB2F2F0000FFFFFFFFFFFFFFFFFFFF"
+	$"FFFFFFFF002F2D2D2C2C2C2C2D2CEB2D2D2F2F2F000F0F0F0F0F0F0FFFFFFFFF"
+	$"FFFFFFFF0030EB2D2E2C2E2C2E2D2DEB2EEB302F000F0F0F0F0F0F0F0F0FFFFF"
+	$"FFFFFFFFFF00302E2E2D2D2D2E002DEB302F30000F0F0F0F0F0F0F0F0F0F0FFF"
+	$"FFFFFFFFFFFF002F2FEB2D2FEB2FEB302F30000F0F0F0F0F0F0F0F0F0F0F0FFF"
+	$"FFFFFFFFFFFFFF0000302F2F2F2F2F2F00000F0F0F0F0F0F0F0F0F0F0F0F0FFF"
+	$"FFFFFFFFFFFFFFFFFF00000000000000FF0F0F0F0F0F0F0F0F0F0F0F0F0F0FFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0F0F0F0F0F0F0F0F0F0F0F0FFFFF"
+	$"FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0F0F0F0F0F0F0F0FFFFFFFFF"
+};
+
diff --git a/src/TimeBomb.rsrc b/src/TimeBomb.rsrc
deleted file mode 100644
index 93eab377fe4b4a9da0286ac3c18bda5f33416bd0..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 4200
zcmeHK!EVz)5S@gia41dr08ls}p?KH!5%p5FO<RJRCc;&(l}Uq$nlw=pA$rKC^v;0;
z|G*dU8OR@i6jd^BcGr#_r>H^%F5cGlj^CR%yEC)0`(}9k{Hi;Ce_ML$h8RR^MItK0
zuHKfOz2pmasovVejmo&{;NbeB!M<>O@Iz}9KIl1-j?K?kF|SM^`%TAs_=TvzVK5$H
zUeZ%q$DCehWBof(@w1*+u5ph@D_-X+_MU70n;y&aoaZ_3fxHL)e-H4xbm^E)!*G^F
zX5s86X-{uLP!fZthQRMad>t5p4RQj<(K}@}IhIAXqu!3%+_p$a*F0djMj|GVYYB@e
zh#bh30)rf?R4Q6eN?R&ZJwQAc@qiivzEjAU%7LB2a3hAb{a62{6SG|Ux13D&7d2Eh
z?v$8?nd&SG#MN2^ls(hcyCZ->mwNI;Q_58Ps48e6Dt*Eq6++Phmpf+}>;#fW5I8Qa
zCH(Z1ND9jmGC&_BIxXUnBLH(7LBfGT1eiNnq6Qpo$swSS!O@cZOF|$*uz;guYgTO=
zA>hx11p$MzzJ*q`vCC8dbU2Wj_6LEoxZwDfKz8ix0?8HF8}Cm@rexx)>{xti%>L5x
zaU!v9Mg_9$z+D|3eY$w1<Ob3f_(68C`WTNH<l4ZnatYLp+!F^3YYLD!6gUmX=TVg(
zp;0{(T;Jx2!p3-nDLD3@^HPMw<HR(Q;79&w)bDltNpE=Re3Bn8&+XTKuRop)FT3)j
zH|XvT2k&&``G-CK(?g43M7r-i@~_IOUp?=RFDAoL)$jXPgKDQg>|ESeC+FoENMxYU
zZ0sGw?&2!Y=I(yW+iGrkC-t+&Uh6nM_{z|%qG26nS<Ob%Q#$xkqsK~Xr`<mD8i%nE
n>{CN2(UX{Ry8qT|B;tW~U}$Bk#I%E>okK6yde#2=6D0ZtNU5hp

diff --git a/src/TimeBomb_x86.proj b/src/TimeBomb_x86.proj
deleted file mode 100644
index 41122610b058e000c86fbca31908b4ff742ad435..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 14762
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
O9VeLZfOA4zi2Dytf#FmD

diff --git a/src/cd.cpp b/src/cd.cpp
index 9d2effa..898276b 100644
--- a/src/cd.cpp
+++ b/src/cd.cpp
@@ -1,6 +1,6 @@
 
 #include "cd.h"
-
+#include <StorageKit.h>
 D_CD::D_CD()
 {
 
@@ -30,7 +30,7 @@ D_CD::D_CD()
 
 	// we need it to be the right type; this will print an error message
 	// if we didn't find it
-	if (param->Type() == BParameter::B_CONTINUOUS_PARAMETER)
+/*	if (param->Type() == BParameter::B_CONTINUOUS_PARAMETER)
 	{
 		GainParam = dynamic_cast<BContinuousParameter*>(param);
 	}
@@ -41,7 +41,7 @@ D_CD::D_CD()
 
 	// calculate the minimum and maximum volume values for CD 
 	MinVolume = GainParam->MinValue();
-	MaxVolume = GainParam->MaxValue();
+	MaxVolume = GainParam->MaxValue();*/
 
 	Init(CDROM_1);			//Get the first CD rom ready to rock
 
@@ -604,4 +604,4 @@ int32 D_CD::GetCurrentTrack()
 	
 	return CurrentTrack;
 	
-}
\ No newline at end of file
+}
diff --git a/src/main.cpp b/src/main.cpp
index 17e2c8a..e0fe0cd 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -2,7 +2,7 @@
 
 #include "App.h"
 #include "cd.h"
-
+#include <AppKit.h>
 //GLOBALS
 D_CD		*cd;
 
@@ -19,8 +19,8 @@ int main(int argc,char *argv[])
 			hide = true;
 	}
 
-	App		myApp( argc>1 ?  argv[argc-1] : "");	
+	App		myApp(  argv[argc-1]);	
 		
 	myApp.Run();
 	return B_NO_ERROR;	
-}
\ No newline at end of file
+}
-- 
2.19.0

